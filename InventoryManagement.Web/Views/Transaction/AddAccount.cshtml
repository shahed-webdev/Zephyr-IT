@model IEnumerable<InventoryManagement.Repository.AccountCrudModel>  
@{
    ViewData["Title"] = "Add Account";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{ 
 <style>
     .table tr td i { cursor:pointer}
     .table tr td i.delete { color:red}
 </style>
}

<div class="container">
    <h4 class="page-header mb-3">Account</h4>

    <div class="card card-body">
        <form id="formAdd">
            <div class="row">
                <div class="col-lg-5">
                    <div class="md-form">
                        <label for="inputAccountName">Account Name</label>
                        <input id="inputAccountName" type="text" name="AccountName" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-5">
                    <div class="md-form">
                        <label for="inputCostPercentage">Cost Percentage</label>
                        <input id="inputCostPercentage" type="number" step="0.01" min="0" max="100" name="CostPercentage" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="md-form">
                        <input id="btnSubmit" type="submit" value="Add" class="btn btn-deep-orange btn-md" />
                    </div>
                </div>
            </div>
        </form>

        <table class="table">
            <thead>
                <tr>
                    <th><strong>Account Name</strong></th>
                    <th><strong>Cost Percentage</strong></th>
                    <th><strong>Balance</strong></th>
                    <th class="text-center"><strong>Edit</strong></th>
                    <th class="text-center"><strong>Delete</strong></th>
                    <th class="text-center"><strong>Deposit</strong></th>
                    <th class="text-center"><strong>Withdraw</strong></th>
                </tr>
            </thead>
            <tbody id="tBody">
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.AccountName</td>
                    <td>@item.CostPercentage%</td>
                    <td>৳@item.Balance</td>
                    <td class="text-center"><i id="@item.AccountId" data-name="@item.AccountName" data-percentage="@item.CostPercentage" class="edit fas fa-edit"></i></td>
                    <td class="text-center"><i id="@item.AccountId" class="delete fas fa-trash"></i></td>
                    <td class="text-center">
                        <a class="text-success" href="/Transaction/Deposit/@item.AccountId">
                            <i class="fas fa-long-arrow-alt-down mr-1"></i>Deposit
                        </a>
                    </td>
                    <td class="text-center">
                        <a class="text-danger" href="/Transaction/Withdrawal/@item.AccountId">
                            <i class="fas fa-long-arrow-alt-up mr-1"></i>Withdraw
                        </a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal update  -->
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-notify" role="document">
        <div class="modal-content">
            <div class="modal-header deep-orange darken-1">
                <strong class="heading lead">Update</strong>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="formUpdate">
                    <input type="hidden" name="AccountId">
                    <div class="form-group">
                        <label>Account Name</label>
                        <input type="text" name="AccountName" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Cost Percentage</label>
                        <input type="number" step="0.01" min="0" max="100" name="CostPercentage" class="form-control" required>
                    </div>

                    <input id="btnUpdate" type="submit" class="btn btn-deep-orange" value="Update" />
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        (function () {
            var serializeForm = function (form) {
                const obj = {};
                const formData = new FormData(form);
                for (let key of formData.keys()) {
                    obj[key] = formData.get(key);
                }
                return obj;
            };

            //submit form
            const formAdd = document.getElementById("formAdd");
            formAdd.addEventListener("submit", function (evt) {
                evt.preventDefault();

                disableBtn(this.btnSubmit, true);

                const body = serializeForm(this);
                $.ajax({
                    url: '/Transaction/AddAccount',
                    type: "POST",
                    data: body,
                    success: response => {
                        $("#formAdd").notify(response.Message, response.IsSuccess ? "success" : "error");
                        disableBtn(this.btnSubmit, false);

                        if (response.IsSuccess)
                            location.reload();
                    },
                    error: error => {
                        console.log(error);
                        disableBtn(this.btnSubmit, false);
                    }
                });
            });

            //on edit/delete
            const modalContainer = $("#updateModal");
            const formUpdate = document.getElementById("formUpdate");
            const tBody = document.getElementById("tBody");

            tBody.addEventListener("click", function (evt) {
                const element = evt.target;

                const onEdit = element.classList.contains("edit");
                const onDelete = element.classList.contains("delete");
                const id = element.id;

                if (onEdit) {
                    const name = element.getAttribute("data-name");
                    const percentage = element.getAttribute("data-percentage");

                    formUpdate.AccountId.value = id;
                    formUpdate.AccountName.value = name;
                    formUpdate.CostPercentage.value = percentage;

                    modalContainer.modal("show");
                }

                if (onDelete) {
                    $.ajax({
                        url: '/Transaction/DeleteAccount',
                        type: "POST",
                        data: {id},
                        success: response => {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");
                          
                            if (response.IsSuccess) {
                                element.parentElement.parentElement.remove();
                            }
                               
                        },
                        error: error => {
                            console.log(error);                         
                        }
                    });
                }
            })

            //update post
            formUpdate.addEventListener("submit", function (evt) {
                evt.preventDefault();

                disableBtn(this.btnUpdate, true);

                const body = serializeForm(this);
                $.ajax({
                    url: '/Transaction/UpdateAccount',
                    type: "POST",
                    data: body,
                    success: response => {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");
                        disableBtn(this.btnUpdate, false);

                        if (response.IsSuccess)
                            modalContainer.modal("hide");
                    },
                    error: error => {
                        console.log(error);
                        disableBtn(this.btnUpdate, false);
                    }
                });
            });

            //disable btn on submitting
            function disableBtn(btn, isDisable) {
                btn.disabled = isDisable;
            }
        })();
    </script>
}

