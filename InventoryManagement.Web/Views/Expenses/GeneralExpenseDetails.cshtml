@using InventoryManagement.Repository
@model ExpenseDetailsModel
@{
    ViewData["Title"] = "General Expense Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <div class="mb-3">
        <h4 class="page-header">Expense Details</h4>
        <em>Expense By: @Model.CreateBy</em>
    </div>

    <form asp-action="UpdateGeneralExpense">
        <input type="hidden" name="ExpenseId" value="@Model.ExpenseId" />

        <div class="card card-body">
            <div class="form-row">
                <div class="col-7">
                    <div class="form-group">
                        <label>Category</label>
                        <select asp-for="ExpenseCategoryId" class="form-control" asp-items="ViewBag.ExpenseCategoryId" required>
                            <option value="">SELECT</option>
                        </select>
                    </div>
                </div>
                <div class="col-5">
                    <div class="form-group">
                        <label>Amount</label>
                        <input asp-for="ExpenseAmount" step="0.01" type="number" class="form-control" required />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label>Expanse For</label>
                <textarea asp-for="ExpenseFor" class="form-control" required></textarea>
            </div>

            <div class="form-group">
                <label>Expanse Date</label>
                <input asp-for="ExpenseDate" class="form-control datepicker" required />
            </div>

            <div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

        </div>

        <div class="d-flex justify-content-between align-items-center mt-4">
            <div>
                @if (!Model.IsApproved)
                {
                    <button id="btnDelete" type="button" class="btn btn-danger mb-1 m-0">Delete</button>
                }
                <a class="d-block" href="/Expenses/Index">Back To List</a>
            </div>

            <div class="d-flex flex-column flex-end">
                <select id="selectAccountId" name="@Model.AccountId" asp-items="ViewBag.Account" class="form-control my-2" required>
                    <option value="">[ Payment Method ]</option>
                </select>
                
                <button type="submit" class="btn peach-gradient mb-1 m-0">Update <i class="fas fa-check ml-1"></i></button>

                <div class="mt-2 text-right">
                    <input type="checkbox" class="form-check-input" id="checkApprove" @(Model.IsApproved ? "disabled" : "")>
                    <label class="form-check-label" for="checkApprove">@(Model.IsApproved ? "Approved" : "Approve Expense")</label>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script>
        $(function() {
            $('.datepicker').pickadate();
        });

        //approve check

        const checkApprove = document.getElementById("checkApprove");
        checkApprove.addEventListener("click", function() {
            const selectAccountId = document.getElementById("selectAccountId");

            //Payment Method validation if admin
            if (selectAccountId) {
                const selected = selectAccountId.value;
                if (!selected) {
                    $.notify("Select Payment Method", "error");

                    this.checked =false
                    return;
                }
            }


            this.disabled = true;

                $.ajax({
                    type: "POST",
                    url: `/Expenses/ApproveGeneralExpense`,
                    data: { id: @Model.ExpenseId , accountId: selectAccountId.value},
                    success: response => {
                        this.disabled = response.IsSuccess;
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");
                        location.href = "/Expenses/Index";
                    },
                    error: response => {
                        this.disabled = false;
                        console.log(response);
                    }
                });
            });

        //delete
        const btnDelete = document.getElementById("btnDelete");
        if (btnDelete) {
            btnDelete.onclick = function(evt) {
                this.disabled = true;
                $.ajax({
                    type: "POST",
                    url: `/Expenses/DeleteGeneralExpense`,
                    data: { id: @Model.ExpenseId },
                    success: response => {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");

                        if (response.IsSuccess) {
                            location.href = "/Expenses/Index";
                            return;
                        }
                        this.disabled = false;
                    },
                    error: response => {
                        this.disabled = false;
                        console.log(response);
                    }
                });
            }
        }
    </script>
}