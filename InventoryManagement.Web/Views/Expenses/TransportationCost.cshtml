@{
    ViewData["Title"] = "Transportation Cost";

    var isSalesmen = User.IsInRole("SalesPerson");
    var isAdmin = User.IsInRole("admin");
    Layout = isSalesmen ? "_SalesmanLayout" : "_AdminLayout";

    var message = Context.Request.Query["Message"];
}

@section Styles{
    <style>
        .delete { cursor: pointer; color: red; }
        #grandTotal { font-size: 22px; margin-right: 15px; font-weight: bold; }
    </style>
}

<div class="container">
    <h4 class="page-header mb-3">Transportation Cost</h4>

    @if (!string.IsNullOrEmpty(message))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @message
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="card card-body">
        <div class="form-row">
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Target Client/Corporate</label>
                    <input id="inputCustomer" type="text" class="form-control" placeholder="Internal" />
                    <input id="hiddenCustomerId" type="hidden" />
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <label>Expanse Date</label>
                    <input id="expenseDate" type="text" class="form-control datepicker" required />
                </div>
            </div>
            <div class="col-lg-5">
                <div class="form-group">
                    <label>Note</label>
                    <input id="expenseNote" type="text" class="form-control" />
                </div>
            </div>
        </div>

        <form id="formAdd">
            <div class="form-row mt-3">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Details</label>
                        <input name="ExpenseFor" type="text" class="form-control" required />
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="form-group">
                        <label>Person</label>
                        <input name="NumberOfPerson" type="number" class="form-control" required />
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Vehicle</label>
                        <input name="Vehicle" type="text" class="form-control" required />
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Tk</label>
                        <div class="input-group align-items-center">
                            <input name="ExpenseAmount" step="0.01" type="number" class="form-control" required />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-warning btn-md my-0">Add</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>

        <table class="table table-sm">
            <thead>
                <tr>
                    <th><strong>Details</strong></th>
                    <th><strong>Person</strong></th>
                    <th><strong>Vehicle</strong></th>
                    <th><strong>Tk</strong></th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tbody"></tbody>
        </table>
    </div>

    <div class="mt-4">
        <strong class="d-block" id="grandTotal"></strong>
        
        @if (isAdmin)
        {
            <select id="selectAccountId" name="AccountId" asp-items="ViewBag.Account" class="form-control w-50 my-3">
                <option value="">[ Payment Method ]</option>
            </select>
        }

        <button id="btnSubmit" class="btn peach-gradient mb-1 m-0">Submit <i class="fas fa-check ml-1"></i></button>
    </div>
</div>

@section Scripts{
    <script>
        $(function() {
            $('.datepicker').pickadate({
                format: 'd-mmmm-yyyy',
                clear: ''
            }).val(moment(new Date()).format('DD-MMMM-YYYY'));

            //customer autocomplete
            hiddenCustomerId.value = "";
            inputCustomer.addEventListener("input",
                function() {
                    hiddenCustomerId.value = "";
                });

            $('#inputCustomer').typeahead({
                minLength: 1,
                displayText: function(item) {
                    return `${item.CustomerName}  ${item.PhonePrimary ? item.PhonePrimary : ''}  ${item.OrganizationName ? item.OrganizationName : ''}`;
                },
                afterSelect: function(item) {
                    this.$element[0].value = item.CustomerName
                },
                source: function(request, result) {
                    $.ajax({
                        url: "/Selling/FindCustomers",
                        data: { prefix: request },
                        success: function(response) { result(response); },
                        error: function(err) { console.log(err) }
                    });
                },
                updater: function(item) {
                    hiddenCustomerId.value = item.CustomerId;
                    return item;
                }
            })
        });

        //private method
        (function() {
            let listedData = [];
            const serializeForm = function(form) {
                const obj = {};
                obj.id = new Date().getTime();

                const formData = new FormData(form);
                for (let key of formData.keys()) {
                    obj[key] = formData.get(key);
                }
                return obj;
            };

            const btnSubmit = document.getElementById("btnSubmit");
            const formAdd = document.getElementById("formAdd");
            const tBody = document.getElementById("tbody");

            //add to list
            formAdd.addEventListener("submit",
                function(evt) {
                    evt.preventDefault();

                    listedData.unshift(serializeForm(this));

                    showTable();
                    this.reset();
                });

            function showTable() {
                const fragment = document.createDocumentFragment();
                const grandTotal = document.getElementById("grandTotal");

                listedData.forEach(item => {
                    const tr = document.createElement("tr");
                    tr.innerHTML = `<td>${item.ExpenseFor}</td><td>${item.NumberOfPerson}</td><td>${item.Vehicle}</td><td>৳${item.ExpenseAmount}</td><td><i id="${item.id}" class="delete fas fa-trash"></i></td>`;
                    fragment.appendChild(tr);
                });

                tBody.innerHTML = "";
                tBody.append(fragment);

                grandTotal.textContent = `Total: ৳${sumTotal()}`;
            }

            //delete
            tBody.addEventListener("click",
                function(evt) {
                    const onDelete = evt.target.classList.contains("delete");
                    if (!onDelete) return;

                    const id = +evt.target.id;
                    evt.target.parentElement.parentElement.remove();

                    listedData = listedData.filter(el => el.id !== id);

                    showTable();
                });

            //post data
            btnSubmit.addEventListener("click",
                function(evt) {
                    evt.preventDefault();

                    const customerId = document.getElementById("hiddenCustomerId");
                    const expenseDate = document.getElementById("expenseDate");
                    const expenseNote = document.getElementById("expenseNote");
                    const selectAccountId = document.getElementById("selectAccountId");

                    //Payment Method validation if admin
                    if (selectAccountId) {
                        const selected = selectAccountId.value;
                        if (!selected) {
                            $.notify("Select Payment Method", "error");
                            return;
                        }
                    }

                    if (!customerId.value)
                        inputCustomer.value = "";

                    const model = {
                        CustomerId: customerId.value,
                        ExpenseDate: expenseDate.value,
                        ExpenseNote: expenseNote.value,
                        TotalExpense: sumTotal(),
                        AccountId: selectAccountId ? selectAccountId.value : "",
                        ExpenseTransportationList: listedData
                    }

                    if (!model.ExpenseDate || !model.ExpenseNote || !listedData.length) {
                        $.notify("Required Info Not Provided", "error");
                        return;
                    }

                    disableSubmit(true, this);

                    $.ajax({
                        type: "POST",
                        url: `/Expenses/PostTransportationCost`,
                        data: model,
                        success: response => {
                            disableSubmit(false, this);
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            if (response.IsSuccess)
                                location.href = "/Expenses/TransportationCost";
                        },
                        error: response => {
                            disableSubmit(false, this);
                            console.log(response);
                        }
                    });
                });

            function sumTotal() {
                return listedData.reduce((acc, item) => acc + +item.ExpenseAmount, 0);
            }

            function disableSubmit(isSubmit, btn) {
                btn.disabled = isSubmit;
            }
        }());
    </script>
}
