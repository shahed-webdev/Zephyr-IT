
@{
    ViewData["Title"] = "Find Product";

    var isSalesmen = User.IsInRole("SalesPerson");
    Layout = isSalesmen ? "_SalesmanLayout" : "_AdminLayout";
}

@section Styles{
    <style>
        .info-container { opacity: 0; transition: opacity .3s ease-in-out }
        .info-container.show { opacity: 1; transition: opacity .3s ease-in-out }
        #damage-badge{display: none}

        ul.striped li { padding: .6rem; font-size: 1.1rem; }
        ul.striped li strong { color: #777 }
        ul.striped li span { margin-left: 5px }
    </style>
}

<div class="row">
    <div class="col-lg-8 mx-auto">
        <h4 class="mb-3 page-header d-print-none">Find Product</h4>

        <div class="card card-body mb-3 p-5">
            <form id="formCode">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="md-form mt-0 mb-0 flex-1">
                        <input id="inputProductCode" autocomplete="off" type="text" class="form-control" required />
                        <label for="inputProductCode">Product code</label>
                        <span id="codeError" class="field-validation-error"></span>
                    </div>

                    <button id="btnFind" type="submit" class="btn btn-sm btn-deep-orange">
                        <i class="far fa-search text-white"></i>
                    </button>
                </div>
            </form>
        </div>

        <div class="info-container">
            <div class="card card-body p-5">
                <div class="text-center">
                    <h4 class="mb-1 font-weight-bold">
                        <strong id="category"></strong>
                        <small id="damage-badge" class="red-text">
                            <i class="fas fa-dumpster"></i>
                            Damaged
                        </small>
                    </h4>
                </div>
                <ul class="striped list-unstyled mb-0">
                    <li id="receipt"></li>
                    @if (!isSalesmen)
                    {
                        <li id="purchase"></li>
                    }
                    <li><strong>Code:</strong><span id="productCode"></span></li>
                    <li><strong>Brand and Model:</strong><span id="productName"></span></li>
                    @if (!isSalesmen)
                    {
                        <li><strong>Purchase Price:</strong><span id="purchasePrice"></span></li>
                    }
                    <li><strong>Selling Price:</strong><span id="sellingPrice"></span></li>
                    <li><strong>Warranty:</strong><span id="warranty"></span></li>
                    <li><strong>Description:</strong><span id="description"></span></li>
                    <li><strong>Note:</strong><span id="note"></span></li>
                </ul>
            </div>   

            <div class="mt-3 card card-body">
                <h5 class="font-weight-bold">Product Activity Logs</h5>

                <ul id="show-log" class="list-group list-group-flush"></ul>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        //*****SELECTORS*****/
        // product code form
        const formCode = document.getElementById('formCode')
        const inputProductCode = formCode.inputProductCode
        const codeError = formCode.querySelector('#codeError')
        const btnFind = formCode.btnFind
        const infoContainer = document.querySelector('.info-container')

        // on Product code submit
        formCode.addEventListener('submit',
            evt => {
                evt.preventDefault()
                const url = '/Product/FindProductDetailsByCode'
                const param = { params: { code: inputProductCode.value.trim() } };

                axios.get(url, param).then(res => {
                    appendData(res.data)
                }).catch(err => console.log(err))
            })

        //append data
        function appendData(product) {
            codeError.textContent = '';
            if (!product) {
                codeError.textContent = `"${inputProductCode.value}" Not found!`;
                infoContainer.classList.remove('show')
                return;
            }

            //get product log
            getProductLog(product.ProductCode);

            infoContainer.classList.add('show');
            document.getElementById('damage-badge').style.display = product.IsDamaged? "block":"none";

            document.getElementById('category').textContent = product.ProductCatalogName;
            document.getElementById('productCode').textContent = product.ProductCode;
            document.getElementById('productName').textContent = product.ProductName;

            const purchasePrice = document.getElementById('purchasePrice');
            if (purchasePrice) {
                purchasePrice.textContent = product.PurchasePrice.toFixed(2);
            }

            document.getElementById('sellingPrice').textContent = product.SellingPrice.toFixed(2);
            document.getElementById('warranty').textContent = product.Warranty;
            document.getElementById('description').textContent = product.Description;
            document.getElementById('note').textContent = product.Note;

            const bill = document.getElementById('receipt');
            product.SellingId ? bill.innerHTML = `<strong class="green-text">Bill No: </strong><a target="_blank" href="/Selling/SellingReceipt/${product.SellingId}">#${product.SellingSn}</a>` : bill.innerHTML = '';

            const purchase = document.getElementById('purchase');
            if (purchase) {
                purchase.innerHTML = `<a target="_blank" href="/Purchase/PurchaseReceipt/${product.PurchaseId}">Purchase Details <i class="fal fa-long-arrow-right"></i></a>`;
            }
        }


        //product logs
        const showLog = document.getElementById("show-log");

        function getProductLog(code) {
            showLog.innerHTML = "";

            $.ajax({
                url: '/Product/GetProductLog',
                data: { code },
                success: function (response) {
                    showLog.parentElement.style.display = response.Data.length ? "block" : "none";
                    if (!response.Data.length) return;

                    response.Data.forEach(item => {
                        const li = document.createElement("li");

                        li.className = "list-group-item";
                        li.innerHTML = `<small class="text-muted">Product: ${item.LogStatus}. Bill No: <a target="_blank" href="/Selling/SellingReceipt/${item.SellingId}">#${item.SellingSn}</a></small>
                         <p class="mb-0">${item.Details}</p>
                         <small class="text-muted mr-2"><i class="far fa-clock"></i> ${moment.utc(item.CreatedOnUtc).local().format('LLLL')}</small>
                         <small class="text-muted"><i class="fas fa-user"></i> ${item.ActivityBy}</small>`;
                        showLog.appendChild(li);
                    });
                },
                error: function(error) {
                    console.log(error);
                }
            });
        }
    </script>
}
