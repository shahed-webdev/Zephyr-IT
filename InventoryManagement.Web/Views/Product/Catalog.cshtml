@using InventoryManagement.Repository
@model ProductCatalogViewModel
@{
    ViewData["Title"] = "Catalog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card card-body p-4">
                <h4 class="page-header mt-4 text-center">Add Product Category</h4>

                <form asp-action="Catalog">
                    <div class="form-row">
                        <div class="col">
                            <div class="md-form">
                                <select id="CatalogTypeId" name="CatalogTypeId" class="mdb-select md-form" style="display: none">
                                    <option value="" disabled selected>Category Type</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="md-form">
                                <a class="btn btn-blue-grey btn-rounded btn-sm" data-toggle="modal" data-target="#modalCatalogType">Add New</a>
                            </div>
                        </div>
                        </div>

                    <select name="ParentId" class="mdb-select md-form" style="display: none">
                        <option value="" disabled selected>Preant Category</option>
                        <option value="1">Option 1</option>
                        <option value="2">Option 2</option>
                        <option value="3">Option 3</option>
                    </select>

                    <div class="md-form">
                        <input asp-for="CatalogName" class="form-control" required />
                        <label for="CatalogName">Category Name</label>
                    </div>

                    <button id="btnSubmit" class="btn peach-gradient btn-rounded my-4" type="submit">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Modal-->
<div class="modal fade" id="modalCatalogType" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body text-center mb-1">
                <h5 class="mt-1 mb-2">Add Category Type</h5>
                <form id="formCatalogType">
                    <div class="md-form ml-0 mr-0">
                        <input name="CatalogType" type="text" id="inputCatalogType" class="form-control" />
                        <label for="inputCatalogType">Type</label>
                    </div>

                    <div class="text-center mt-4">
                        <input type="submit" id="btnInputType" value="add" class="btn btn-deep-purple btn-sm" />
                    </div>
                </form>    
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(function () {
            $('.mdb-select').materialSelect();
        });

        const selectCatalogType = document.getElementById("CatalogTypeId");

        const appendCatalogType = function (text, value) {
            const option = document.createElement("option");
            option.text = text;
            option.value = value;

            selectCatalogType.add(option);
        }

        const getCatalogType = function () {
            axios.get('/Product/CatalogType')
                .then(function (response) {
                    response.data.forEach(item => {
                        appendCatalogType(item.CatalogType, item.CatalogTypeId);
                    });
                })
                .catch(function (error) {
                    console.log(error);
                })

        }

        const onTypeSubmit = function (evt) {
            evt.preventDefault();

            const url = '/Product/CatalogType';
            let inputCatalogType = evt.target.inputCatalogType;
            let data = { CatalogType: inputCatalogType.value }

            axios({
                method: 'post',
                url: url,
                data: data
            })
                .then(function (response) {
                    console.log(response)
                    const { CatalogType, CatalogTypeId } = response.data;
                    appendCatalogType(CatalogType, CatalogTypeId);
                    $("#modalCatalogType").modal('hide');
                    inputCatalogType.value = '';
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        const formCatalogType = document.getElementById("formCatalogType");
        formCatalogType.addEventListener('submit', onTypeSubmit);


        getCatalogType();
    </script>
}