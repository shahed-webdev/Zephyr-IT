@using InventoryManagement.Repository
@model SellingReceiptViewModel
@{
    ViewData["Title"] = "Find Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{
    <link href="~/css/selling-receipt.css?v=1.0.0" rel="stylesheet" />
    <style>
        .found-code{ color: red; font-weight: bold}
    </style>
}

<div class="container">
    <h4 class="page-header mb-3">Find Product For Warranty</h4>

    <div class="mb-4">
        <form id="formCode">
            <div class="d-flex justify-content-between align-items-center">
                <div class="md-form mt-0 mb-0 flex-1">
                    <input id="inputProductCode" autocomplete="off" type="text" class="form-control" required />
                    <label for="inputProductCode">Product code</label>
                    <span id="codeError" class="field-validation-error"></span>
                </div>

                <button id="btnFind" type="submit" class="btn btn-sm btn-deep-orange">
                    <i class="far fa-search text-white"></i>
                </button>
            </div>
        </form>
    </div>

    @if (Model != null)
    {
        <div id="receipt">
            <table class="table table-sm table-bordered">
                <tbody>
                    <tr>
                        <td class="text-right" style="width: 50px"><strong>Name</strong></td>
                        <td>@Model.CustomerInfo.Name</td>
                        <td class="text-right" style="width: 50px"><strong>Bill&nbsp;No</strong></td>
                        <td style="width: 90px">@Model.SellingSn</td>
                    </tr>
                    <tr>
                        <td class="text-right"><strong>Address</strong></td>
                        <td>@Model.CustomerInfo.CustomerAddress</td>
                        <td class="text-right"><strong>Date</strong></td>
                        <td>@Model.SellingDate.ToString("d MMM yyyy")</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td class="text-right"><strong>Cell</strong></td>
                        <td>@Model.CustomerInfo.CustomerPhone</td>
                    </tr>
                </tbody>
            </table>

            <table class="product-tb table table-sm table-bordered mt-5">
                <thead>
                    <tr>
                        <th><strong>SL.</strong></th>
                        <th><strong>Product</strong></th>
                        <th><strong>Description</strong></th>
                        <th><strong>Warranty</strong></th>
                        <th><strong>Qty.</strong></th>
                        <th><strong>U.Price</strong></th>
                        <th class="text-right"><strong>Price</strong></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var index = 1;
                        @if (Model.ServiceCharge > 0)
                        {
                            <tr>
                                <td class="text-center">@index</td>
                                <td>Service</td>
                                <td colspan="4">@Model.ServiceChargeDescription</td>
                                <td class="text-right">৳@Model.ServiceCharge</td>
                            </tr>
                            index++;
                        }

                        foreach (var item in Model.Products)
                        {
                            <tr>
                                <td class="text-center">@index</td>
                                <td>@item.ProductCatalogName</td>
                                <td>
                                    @item.ProductName,
                                    @if (item.Description != null)
                                    {
                                        <span>@item.Description,</span>
                                    }

                                    @foreach (var code in item.ProductCodes)
                                    {
                                        <span class="codeSpan">@code</span>
                                    }
                                </td>
                                <td class="text-center">@item.Warranty</td>
                                <td class="text-center">@item.ProductCodes.Length</td>
                                <td class="text-center">৳@item.SellingPrice</td>
                                <td class="text-right">৳@(item.SellingPrice * item.ProductCodes.Length)</td>
                            </tr>
                            index++;
                        }
                    }

                    <tr>
                        <td colspan="6" class="text-center">
                        </td>
                        <td class="text-right">
                            @{
                                var totalAmount = Model.SellingTotalPrice + Model.ServiceCharge;
                            }
                            <h5>Total&nbspAmount:<strong>৳@totalAmount</strong></h5>
                            @if (Model.SellingDiscountAmount > 0)
                            {
                                <h5 class="border-bottom border-dark pb-1">Discount:<strong>৳@Model.SellingDiscountAmount</strong></h5>
                                <h5 class="mt-1">Net Payable Amount:<strong>৳@(totalAmount - Model.SellingDiscountAmount)</strong></h5>
                            }
                            <h5>Cash&nbspPaid:<strong>৳@Model.SellingPaidAmount</strong></h5>
                            @if (Model.SellingReturnAmount > 0)
                            {
                                <h5>Return&nbspAmount:<strong>৳@Model.SellingReturnAmount</strong></h5>
                            }
                            <h5>Due Amount:<strong>৳@Model.SellingDueAmount</strong></h5>
                        </td>
                    </tr>
                </tbody>
            </table>

            <div class="paid-record row">
                @if (Model.Payments.Count > 0)
                {
                    <div class="col">
                        <fieldset>
                            <legend>Payment Record</legend>

                            @foreach (var item in Model.Payments)
                            {
                                <ul class="list-group list-group-flush black-text">
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span>৳@item.PaidAmount/- <small>@item.PaymentMethod</small></span>
                                        <small>@item.PaidDate.ToString("d MMM yyyy")</small>
                                    </li>
                                </ul>
                            }
                        </fieldset>
                    </div>
                }
                <div class="col">
                    <form id="formAdd">
                        <div class="md-form">
                            <textarea required id="inputDecription" name="AcceptanceDescription" class="md-textarea form-control" rows="1"></textarea>
                            <label for="inputDecription">Issue</label>
                        </div>

                        <input id="btnSubmit" type="submit" value="Submit" class="btn btn-danger">
                    </form>
                </div>
            </div>

            <p class="mb-0 mt-1">Served By: @Model.SoldBy</p>
        </div>
    }
</div>

@section scripts{
    <script>
        (function() {
            // product code form
            const formCode = document.getElementById('formCode');
            formCode.addEventListener('submit',
                function(evt) {
                    evt.preventDefault();

                    $.ajax({
                        url: '/Warranty/FindProductByCode',
                        type: "POST",
                        data: { code: this.inputProductCode.value.trim() },
                        success: response => {
                            if (response.IsSuccess) {
                                const obj = response.Data;
                                obj.Code = this.inputProductCode.value.trim();

                                sessionStorage.setItem("productInfo", JSON.stringify(obj));

                                location.href = `/Warranty/FindProduct/${response.Data.SellingId}`;
                                return;
                            }

                            $.notify(response.Message, response.IsSuccess ? "success" : "error");
                        },
                        error: function(error) {
                            console.log(error);
                        }
                    });
                });

            //post data
            const formAdd = document.getElementById("formAdd");
            if (formAdd) {
                formAdd.addEventListener("submit",
                    function(evt) {
                        evt.preventDefault();

                        const productInfo = JSON.parse(sessionStorage.getItem("productInfo"));
                        const body = { SellingId: productInfo.SellingId, ProductStockId: productInfo.ProductStockId, AcceptanceDescription: this.AcceptanceDescription.value }

                        this.btnSubmit.disabled = true;

                        $.ajax({
                            url: '/Warranty/PostAcceptance',
                            type: "POST",
                            data: body,
                            success: response => {
                                if (response.IsSuccess) {
                                    location.href = `/Warranty/AcceptanceSlip/${response.Data}`;
                                    return;
                                }
                                this.btnSubmit.disabled = false;
                                $.notify(response.Message, response.IsSuccess ? "success" : "error");
                            },
                            error: error => {
                                this.btnSubmit.disabled = false;
                                console.log(error);
                            }
                        });
                    });
            }

            //match the code in list
            function highlightCode() {
                const element = document.querySelectorAll(".codeSpan");
                const code = JSON.parse(sessionStorage.getItem("productInfo"));

                for (let i = 0; i < element.length; i++) {
                    if (element[i].textContent === code.Code) {
                        element[i].classList.add("found-code");
                        break;
                    }
                }
            }

            highlightCode();
        })();
    </script>
}