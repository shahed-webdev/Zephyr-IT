
@{
    ViewData["Title"] = "Product Stock";
    Layout = "~/Views/Shared/_SalesmanLayout.cshtml";
}

<div class="m-md-3">
    <h4 class="mb-3 page-header">Product Stock</h4>
    
    <section class="card card-body mt-3">
        <div class="row">
            <div class="col-lg-3">
                <div class="md-form">
                    <select name="ProductCatalogId" searchable="Search here.." id="ParentId" asp-items="ViewBag.ParentId" class="mdb-select" required>
                        <option disabled value="" selected>Select Category</option>
                    </select>
                </div>
            </div>
        </div>

        <h5 class="font-weight-bold mb-3" id="categoryName"></h5>
        <table id="data-table" class="table table-bordered table-sm">
            <thead>
                <tr>
                    <th><strong>Brand & Model</strong></th>
                    <th><strong>Stock</strong></th>
                    <th><strong>Warranty</strong></th>
                    <th><strong>Description</strong></th>
                </tr>
            </thead>
        </table>
    </section>
</div>

@section Scripts{
    <script>
        $(function() {
            // Material Select Initialization
            $('.mdb-select').materialSelect();

            dataTable.getData();
        });

        const dataTable = {
            table: null,
            filter: null,
            init: function() {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Product/GetProductByCategory",
                        type: "POST",
                        data: function(d) {
                            d.filters = dataTable.filter;
                        }
                    },
                    columns:
                    [
                        { data: "ProductName" },
                        {
                            data: "Stock",
                            "render": function(data, type, row, meta) {
                                return data > 0 ? `<a class="blue-text" href="/Product/StockDetails/${row.ProductId}">${data}</a>` : data;
                            }
                        },
                        { data: "Warranty" },
                        { data: "Description" }
                    ],
                    columnDefs: [
                        //{ 'searchable': false, 'targets': [4] },
                        //{ 'sortable': false, 'targets': [4] },
                        { 'className': "text-left", "targets": [0, 2, 3] }
                    ]
                });
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            }
        }

        // selectors
        const parentId = document.getElementById('ParentId');
        // event change category
        parentId.addEventListener('change',
            function() {
                const categoryId = this.value;
                if (!categoryId) return;

                categoryBasedProduct(categoryId);
            });

        //show category based product
        function categoryBasedProduct(categoryId) {
            const categoryName = document.getElementById('categoryName');
            categoryName.textContent = parentId.options[parentId.selectedIndex].text;

            dataTable.filter = [{ Field: "ProductCatalogId", Value: categoryId, Operand: "==" }];
            dataTable.getData();
        }
    </script>
}