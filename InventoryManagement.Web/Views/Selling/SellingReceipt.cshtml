@using InventoryManagement.Repository
@model SellingReceiptViewModel
@{
    ViewData["Title"] = "Selling Receipt";
    var isSalesmen = User.IsInRole("SalesPerson");
    Layout = isSalesmen ? "_SalesmanLayout" : "_AdminLayout";
}

@section Styles{
    <link href="~/css/selling-receipt.css?v=1.0.1" rel="stylesheet"/>
    <style>
        #expenseList .delete { color: red; cursor: pointer }
        #expenseList strong { font-weight: bold; }
        .product-changed { text-decoration: line-through; color: #777 }

        .table-bordered { border: none; }
    </style>
}

<div id="receipt">
    @if (!isSalesmen)
    {
        <section class="my-4 d-print-none">
            <div class="d-flex justify-content-between">
                <div>
                    <a class="btn btn-success btn-rounded" href="/Selling/Selling"><i class="fal fa-cart-plus mr-1"></i>Selling</a>
                    <a class="btn btn-deep-purple btn-rounded" href="/Selling/BillChange/@Model.SellingId"><i class="fal fa-cart-plus mr-1"></i>Update Bill</a>
                    <a id="showExpenseModal" class="btn btn-danger btn-rounded"><i class="fas fa-wallet mr-1"></i>Expense</a>
                </div>
                <div>
                    <a class="btn btn-blue-grey btn-rounded" href="/Selling/SellingRecords"><i class="fas fa-file-invoice mr-1"></i>Selling Invoice</a>
                    <button class="btn btn-elegant btn-rounded" onclick="print()"><i class="fal fa-print mr-1"></i>Print</button>
                </div>
            </div>
        </section>
    }

    <table class="table table-sm table-bordered">
        <tbody>
        <tr>
            <td class="text-right" style="width: 50px"><strong>Name</strong></td>
            <td>@Model.CustomerInfo.Name</td>
            <td class="text-right" style="width: 50px"><strong>Bill&nbsp;No</strong></td>
            <td style="width: 90px">@Model.SellingSn</td>
        </tr>
        <tr>
            <td class="text-right"><strong>Address</strong></td>
            <td>@Model.CustomerInfo.CustomerAddress</td>
            <td class="text-right"><strong>Date</strong></td>
            <td>@Model.SellingDate.ToString("d MMM yyyy")</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td class="text-right"><strong>Cell</strong></td>
            <td>@Model.CustomerInfo.CustomerPhone</td>
        </tr>
        </tbody>
    </table>


    <table class="product-tb table table-sm table-bordered mt-5">
        <thead>
            <tr>
                <th><strong>SL.</strong></th>
                <th><strong>Product</strong></th>
                <th><strong>Description</strong></th>
                <th><strong>Warranty</strong></th>
                <th><strong>Qty.</strong></th>
                <th><strong>U.Price</strong></th>
                <th class="text-right"><strong>Price</strong></th>
            </tr>
        </thead>
        <tbody>
            @{
                var index = 1;
                //service
                @if (Model.ServiceCharge > 0)
                {
                    <tr>
                        <td class="text-center">@index</td>
                        <td>Service</td>
                        <td colspan="4">@Model.ServiceChargeDescription</td>
                        <td class="text-right">৳@Model.ServiceCharge</td>
                    </tr>
                    index++;
                }

                foreach (var item in Model.Products)
                {
                    <tr>
                        <td class="text-center">@index</td>
                        <td>@item.ProductCatalogName</td>
                        <td>
                            @item.ProductName,
                            @if (item.Description != null)
                            {
                                <span>@item.Description,</span>
                            }

                            @foreach (var code in item.ProductCodes)
                            {
                                <span class="codeSpan">@code</span>
                            }
                        </td>
                        <td class="text-center">@item.Warranty</td>
                        <td class="text-center">@item.ProductCodes.Length</td>
                        <td class="text-center">৳@item.SellingPrice</td>
                        <td class="text-right">৳@(item.SellingPrice * item.ProductCodes.Length)</td>
                    </tr>
                    index++;
                }

                //purchase from customer
                @if (Model.PurchaseAdjustedAmount > 0)
                {
                    <tr>
                        <td class="text-center">@index</td>
                        <td>Purchase</td>
                        <td colspan="4">@Model.PurchaseDescription</td>
                        <td class="text-right">৳@Model.PurchaseAdjustedAmount</td>
                    </tr>
                    index++;
                }
            }
  
            <tr>
                <td colspan="4" class="text-center">
                    <span id="amount-word"></span>
                </td>
                <td colspan="4" class="text-right">
                    @{
                        var totalAmount = Model.SellingTotalPrice + Model.ServiceCharge+ Model.AccountTransactionCharge;
                    }
                    <h5>Total&nbspAmount:<strong>৳@totalAmount</strong></h5>
                    
                    @* @if (Model.AccountTransactionCharge > 0) *@
                    @* { *@
                    @*     <h5>Transaction Charge:<strong>৳@Model.AccountTransactionCharge</strong></h5> *@
                    @* } *@

                    @if (Model.SellingDiscountAmount > 0)
                    {
                        <h5 class="border-bottom border-dark pb-1">Discount:<strong>৳@Model.SellingDiscountAmount</strong></h5>
                        <h5 class="mt-1">Net Payable Amount:<strong>৳@(totalAmount - Model.SellingDiscountAmount)</strong></h5>
                    }
                
                    @if (Model.PurchaseAdjustedAmount > 0)
                    {
                        <h5>
                            <a href="/Purchase/PurchaseReceipt/@Model.PurchaseId">Purchase</a> Adjustment Amount:<strong>৳@Model.PurchaseAdjustedAmount</strong>
                        </h5>
                    }
                    <h5>Cash&nbspPaid:<strong>৳@Model.SellingPaidAmount</strong></h5>
                    @if (Model.SellingReturnAmount > 0)
                    {
                        <h5>Return&nbspAmount:<strong>৳@Model.SellingReturnAmount</strong></h5>
                    }
                    <h5>Due Amount:<strong>৳@Model.SellingDueAmount</strong></h5>
                </td>
            </tr>
        </tbody>
    </table> 

    <div class="paid-record row">
        <div class="col-5">
            @if (Model.Payments.Count > 0)
            {
            <fieldset>
                <legend>Payment Record</legend>

                @foreach (var item in Model.Payments)
                {
                    <ul class="list-group list-group-flush black-text">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>৳@item.PaidAmount/- <small>@item.PaymentMethod</small></span>
                            <small>@item.PaidDate.ToString("d MMM yyyy")</small>
                        </li>
                    </ul>
                }
            </fieldset>
            }

            @if (Model.MissDates.Length > 0)
            {
                <fieldset class="p-2 mt-4 d-print-none">
                    <legend class="red-text">Missed Payment Promise Date</legend>

                    @foreach (var item in Model.MissDates)
                    {
                        <ul class="list-group list-group-flush black-text">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <small class="red-text">@item.ToString("d MMM yyyy")</small>
                            </li>
                        </ul>
                    }
                </fieldset>
            }
        </div>

        <div class="col">
            <fieldset>
                <legend>Note</legend>
                <p>
                    No warranty will be applicable in case of burning or physical damage. Warranty will
                    also be void if warranty sticker is removed. Sold products are non-refundable.
                </p>
            </fieldset>
            
            @if (Model.WarrantyList.Any())
            {
              <h6 class="mt-3">Warranty Record</h6>
                <table class="table table-bordered table-sm">
                    <thead>
                    <tr>
                        <th class="text-center"><strong>Warranty No.</strong></th>
                        <th><strong>Product</strong></th>
                        <th><strong>Description</strong></th>
                        <th><strong>Delivery Date</strong></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var warranty in Model.WarrantyList)
                    {
                        <tr>
                            <td class="text-center">
                                <a href="/Warranty/AcceptanceSlip/@warranty.WarrantyId">@warranty.WarrantySn</a>
                            </td>
                            <td>
                                <strong>@warranty.ProductCatalogName</strong>
                                <span class="@(warranty.ChangedProductCode == null ? "" : "product-changed")">
                                    @warranty.ProductCode
                                </span>
                                @if (warranty.ChangedProductCode != null)
                                {
                                    <span>@warranty.ChangedProductCode</span>
                                }
                            </td>
                            <td>@warranty.DeliveryDescription</td>
                            <td>
                                @if (warranty.DeliveryDate != null)
                                {
                                    @warranty.DeliveryDate.Value.ToString("dd MMM yyyy")
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>
    </div>

    <p class="mb-0 mt-1">Served By: @Model.SoldBy</p>
</div>


<!--Modal: expense-->
<div class="modal fade" id="modalExpense" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-notify modal-danger modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <p class="heading">Expense <strong id="sumExpense"></strong></p>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="formExpenseAdd">
                    <div class="form-group">
                        <label for="inputExpenseDescription">Expense Description</label>
                        <input id="inputExpenseDescription" name="ExpenseDescription" type="text" class="form-control" required>
                    </div>
                    <div class="row">
                        <div class="col lg-5">
                            <div class="form-group">
                                <label for="inputExpense">Expense</label>
                                <input id="inputExpense" name="Expense" type="number" step="0.01" min="0" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-lg-5">
                            <label>Account</label>
                            <select name="AccountId" asp-items="ViewBag.Account" class="form-control" required>
                                <option value="">[ Payment Method ]</option>
                            </select>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group pt-lg-4">
                                <input id="btnSubmit" type="submit" value="Submit" class="btn btn-danger btn-md"/>
                            </div>
                        </div>
                    </div>
                </form>

                <ul id="expenseList" class="list-group list-group-flush"></ul>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/js/amount-in-word.js"></script>
    <script>
        $(function() {
            $("#amount-word").text(`Taka (in words): ${number2text(@totalAmount)}`);
        });

        (function() {
            const serializeForm = function(form) {
                const obj = {};
                const formData = new FormData(form);
                for (let key of formData.keys()) {
                    obj[key] = formData.get(key);
                }
                return obj;
            };

            const formExpenseAdd = document.getElementById("formExpenseAdd");
            const showExpenseModal = document.getElementById("showExpenseModal");
            const expenseList = document.getElementById("expenseList");

            //post bill Expense Add
            formExpenseAdd.addEventListener("submit",
                function(evt) {
                    evt.preventDefault();

                    const body = serializeForm(this);
                    body.SellingId = '@Model.SellingId';

                    const btn = this.btnSubmit;
                    btnDisabled(btn, true);

                    $.ajax({
                        url: '/Selling/AddBillExpense',
                        type: "POST",
                        data: body,
                        success: response => {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            btnDisabled(btn, false);

                            if (response.IsSuccess) {
                                getBillExpense();
                                sumExpense();

                                this.reset();
                            }
                        },
                        error: function(error) {
                            btnDisabled(btn, false);
                            console.log(error);
                        }
                    });
                });

            //get bill expense data
            function getBillExpense() {
                expenseList.innerHTML = "";

                $.ajax({
                    url: '/Selling/GetBillExpense',
                    data: { id: @Model.SellingId },
                    success: function(response) {
                        response.forEach(item => {
                            expenseList.appendChild(appendData(item));
                        });

                        sumExpense();
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            }

            //append inserted expense
            function appendData(item) {
                const isAdmin = '@User.IsInRole("admin")';
                const deleteElement = isAdmin === "True" ? `<i id="${item.SellingExpenseId}" class="delete fas fa-trash"></i>` : "";
                const li = document.createElement("tr");

                li.className = "list-group-item d-flex justify-content-between align-items-center";
                li.innerHTML = `<div>
                                   <div>
                                    <strong>৳<span class="expenseAmount">${item.Expense}</span></strong>
                                    <small>${item.AccountName ? item.AccountName:""}</small>
                                    <small class="text-muted ml-3">
                                      <i class="far fa-clock text-muted">
                                      </i>${moment(item.InsertDateUtc).format('DD MMM YYYY')}
                                    </small>
                                   </div>
                                  <span>${item.ExpenseDescription}</span>
                                </div>
                                ${deleteElement}`;
                return li;
            }

            //disable btn
            function btnDisabled(btn, isLoading) {
                btn.disabled = isLoading;
            }

            //delete
            expenseList.addEventListener("click",
                function(evt) {
                    const element = evt.target;

                    if (element.classList.contains("delete")) {
                        $.ajax({
                            url: '/Selling/DeleteBillExpense',
                            type: "POST",
                            data: { id: element.id },
                            success: function(response) {
                                $.notify(response.Message, response.IsSuccess ? "success" : "error");

                                if (response.IsSuccess) {
                                    element.parentElement.remove();
                                    sumExpense();
                                }
                            },
                            error: function(error) {
                                console.log(error);
                            }
                        });
                    }
                });

            //on show modal
            showExpenseModal.addEventListener("click",
                function() {
                    getBillExpense();

                    $("#modalExpense").modal("show");
                });

            //sum total expense
            function sumExpense() {
                const expense = document.getElementById("sumExpense");
                const expenseElement = document.querySelectorAll(".expenseAmount");
                let sum = 0;

                for (let i = 0; i < expenseElement.length; i++) {
                    sum += +expenseElement[i].textContent;
                }

                expense.innerHTML = `: ৳${sum.toFixed(2)}`;
            }
        })();
    </script>
}
