
@{
    ViewData["Title"] = "Due Invoice";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{
    <style>
        .past-row-color td { color: #ff1818; }
        .today-row-color td { color: #00b107; }

        .on-edit form { display: flex }
        .on-edit input { border: 1px solid #B6B4B4; padding: 6px; text-align: center; box-shadow: 1px 0 7px rgba(0, 0, 0, 0.2); width: 100% }
        .on-edit input:focus { border: 1px solid #00bfff }

        .on-edit form > button { border: none; background-color: #324ca7; color: #fff; padding: 0 10px; }
    </style>
}

<div class="m-md-3">
    <div class="d-flex justify-content-between align-items-center">
        <h4 class="mb-3 page-header">Due Invoice</h4>
        <h4 id="sumTotal" class="font-weight-bold mb-0"></h4>
    </div>

    <div class="card card-body">

        <table id="data-table" class="table table-sm table-bordered">
            <thead>
            <tr>
                <th>#Bill No</th>
                <th>Customer Name</th>
                <th>Product Price</th>
                <th>Service</th>
                <th>Paid</th>
                <th>Discount</th>
                <th>Due</th>
                <th>Selling Date</th>
                <th>PPD</th>
            </tr>
            </thead>    
        </table>
    </div>
</div>

@section scripts{
    <script>
        $(function() {
            dataTable.getData();
        });

        //get data
        var dataTable = {
            table: null,
            init: function() {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Selling/DueInvoiceData",
                        type: "POST"
                    },
                    columns:
                    [
                        {
                            data: "SellingSn",
                            "render": function(data, type, row, meta) {
                                return `<a class="blue-text" href="/Selling/SellingReceipt/${row.SellingId}">${data}</a>`;
                            }
                        },
                        {
                            data: "CustomerName",
                            "render": function(data, type, row, meta) {
                                return `<a class="blue-text" href="/Selling/MultipleDueCollection/${row.CustomerId}">${data}</a>`;
                            }
                        },
                        { data: "SellingAmount", "render": dataTable.addSign },
                        { data: "ServiceCharge", "render": dataTable.addSign },
                        { data: "SellingPaidAmount", "render": dataTable.addSign },
                        { data: "SellingDiscountAmount", "render": dataTable.addSign },
                        {
                            data: "SellingDueAmount",
                            "render": function(data, type, row, meta) {
                                return `<a class="blue-text" href="/Selling/DueCollection/${row.SellingId}">${data}/-</a>`;
                            }
                        },
                        { data: "SellingDate", "render": function(data) { return moment(data).format('DD MMM YYYY') } },
                        {
                            data: "PromisedPaymentDate",
                            "render": function (data, type, row, meta) {
                                const date = data ? moment(data).format('DD MMM YYYY') : "";
                                return `<a class="on-edit" data-old="${date}" data-id="${row.SellingId}">${date}</a>`
                            }
                        }
                    ],
                    columnDefs: [
                        { 'searchable': false, 'targets': [2, 3, 4, 5, 7, 8] },
                        { 'className': "text-right", "targets": [2, 3, 4, 5, 6] },
                        { 'className': "text-left", "targets": [1] }
                    ],
                    order: [[8, "desc"]],
                    rowCallback: function(row, data, index) {
                        const date = moment(data["PromisedPaymentDate"]);
                        const now = moment();

                        if (now > date) {
                            $(row).addClass("past-row-color");
                        }

                        if (moment(date).isSame(moment(), 'day')) {
                            $(row).addClass("today-row-color");
                        }
                    },
                });
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function(data) { return `${data}/-` }
        }


        //edit on click
        const tBody = document.getElementById('data-table');
        tBody.addEventListener('click',
            function(evt) {
                const element = evt.target;

                const onEdit = element.classList.contains('on-edit');
                if (!onEdit) return;
                const old = element.getAttribute('data-old');

                const html = `<form onsubmit="return postUpdate(this)">
                  <input name="inputDate" class="datepicker2" value="${old}" type="text" />
                  <button type="submit"><i class="fas fa-check"></i></button>
                </form>`;

                element.innerHTML = html;

                $('.datepicker2').pickadate({ format: 'dd mmm yyyy' });
            });

        //post on enter
        function postUpdate(form) {
            const id = form.parentElement.getAttribute('data-id');
            const newValue = form.inputDate.value;

            if (!newValue) return false;

            $.ajax({
                url: '/Dashboard/PromiseDateUpdate',
                type: "POST",
                data: { id:id, newDate: newValue },
                success: function(response) {
                    if (response.IsSuccess) {
                        form.parentElement.innerHTML = `${newValue}`;
                        form.remove();
                    }

                    $.notify(response.Message, response.IsSuccess ? "success" : "error");
                },
                error: function(error) {
                    console.log(error);
                }
            });

            return false;
        }
    </script>
}